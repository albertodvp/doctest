name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    name: ${{ matrix.os }} / GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-22.04
        ghc:
          - 8.0.2
          - 8.2.2
          - 8.4.1
          - 8.4.2
          - 8.4.3
          - 8.4.4
          - 8.6.1
          - 8.6.2
          - 8.6.3
          - 8.6.4
          - 8.6.5
          - 8.8.1
          - 8.8.2
          - 8.8.3
          - 8.8.4
          - 8.10.1
          - 8.10.2
          - 8.10.3
          - 8.10.4
          - 8.10.5
          - 8.10.6
          - 8.10.7
          # - 9.0.1
          # - 9.0.2
          # - 9.2.1
          - 9.2.2
          - 9.2.3
          - 9.2.4
          - 9.2.5
          - 9.2.6
          - 9.2.7
          - 9.2.8
          - 9.4.1
          - 9.4.2
          - 9.4.3
          - 9.4.4
          - 9.4.5
          - 9.4.6
          - 9.4.7
          - 9.4.8
          # - 9.6.1
          - 9.6.2
          - 9.6.3
          - 9.6.4
          - 9.6.5
          - 9.8.1
          - 9.8.2
          - 9.10.1
        include:
          - os: macos-12
            ghc: system
          - os: windows-latest
            # ghc: system
            ghc: 9.6.2
    steps:
      - uses: actions/checkout@v4

      - name: Set up GHC ${{ matrix.ghc }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc: ${{ matrix.ghc }}

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - run: cabal build

      - run: cabal exec "$(cabal list-bin spec)"

      - run: cabal install

      - run: cabal repl --with-compiler=doctest

  success:
    needs: build
    runs-on: ubuntu-latest
    if: always() # this is required as GitHub considers "skipped" jobs as "passed" when checking branch protection rules

    steps:
      - run: false
        if: needs.build.result != 'success'

      - uses: actions/checkout@v4
      - run: curl -sSL https://raw.githubusercontent.com/sol/hpack/main/get-hpack.sh | bash
      - run: hpack && git diff --color --exit-code
